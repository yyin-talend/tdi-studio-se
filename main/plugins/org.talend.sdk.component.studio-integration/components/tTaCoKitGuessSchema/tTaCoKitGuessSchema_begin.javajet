<%/*
  Copyright (C) 2006-2021 Talend Inc. - www.talend.com
   Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
*/%>

<%@ jet
    imports="
        org.talend.core.model.components.IComponent
        org.talend.core.model.process.INode
        org.talend.core.runtime.IAdditionalInfo
        org.talend.designer.codegen.config.CodeGeneratorArgument
        org.talend.core.model.process.ElementParameterParser
        org.talend.designer.core.model.components.EParameterName
        org.talend.designer.core.model.components.ElementParameter
        org.talend.core.model.process.IElementParameter
        org.talend.core.model.process.EParameterFieldType
        org.talend.core.model.metadata.IMetadataColumn
        org.talend.core.model.metadata.IMetadataTable
        org.talend.core.model.process.IConnection
        org.talend.core.model.process.IConnectionCategory
        org.talend.core.model.process.EConnectionType
        org.talend.core.model.utils.NodeUtil
        java.util.Arrays
        java.util.List
        java.util.Locale
    "
%>
<%
    final CodeGeneratorArgument guessSchemaCodeGenArgument = CodeGeneratorArgument.class.cast(argument);
    final INode guessSchemaNode = INode.class.cast(guessSchemaCodeGenArgument.getArgument());
    if(guessSchemaNode == null) {
        throw new IllegalArgumentException("node cannot be null");
    }
    final String guessSchemaCid = guessSchemaNode.getUniqueName();
    final String guessSchemaOriginalName = (String)guessSchemaNode.getElementParameter(EParameterName.COMPONENT_NAME.getName()).getValue();
    final String guessSchemaFamily = (String)guessSchemaNode.getElementParameter(EParameterName.FAMILY.getName()).getValue();
    final String guessSchemaVersion = (String)guessSchemaNode.getElementParameter(EParameterName.VERSION.getName()).getValue();
    final String pluginName = (String)guessSchemaNode.getElementParameter("___TACOKIT_GUESS_SCHEMA_PARAMETER_PLUGIN_NAME___").getValue();
    final String actionName = (String)guessSchemaNode.getElementParameter("___TACOKIT_GUESS_SCHEMA_PARAMETER_ACTION_NAME___").getValue();
    final String tacokitComponentType = (String)guessSchemaNode.getElementParameter("___TACOKIT_GUESS_SCHEMA_PARAMETER_COMPONENT_TYPE___").getValue();
    final String outputConnectionName = (String)guessSchemaNode.getElementParameter("___TACOKIT_GUESS_SCHEMA_PARAMETER_OUTPUT_CONNECTION_NAME___").getValue();
    final IComponent guessSchemaComponent = guessSchemaNode.getComponent();
    final boolean guessSchemaUseLookup = guessSchemaComponent.useLookup();
%>

final java.io.PrintStream out = System.out;
System.setOut(new java.io.PrintStream(new java.io.OutputStream() {
        @Override
        public void write(final int b) {
            // deactivate System.out for guess schema
            // This stream is used to transfer the schema between process
        }
}));

<%
    final CodeGeneratorArgument codeGenArgument = CodeGeneratorArgument.class.cast(argument);
    final INode node = INode.class.cast(codeGenArgument.getArgument());
    if(node == null) {
        throw new IllegalArgumentException("node cannot be null");
    }
    final String cid = node.getUniqueName();
    final String originalName = (String)node.getElementParameter(EParameterName.COMPONENT_NAME.getName()).getValue();
    final String family = (String)node.getElementParameter(EParameterName.FAMILY.getName()).getValue();
    final String version = (String)node.getElementParameter(EParameterName.VERSION.getName()).getValue();
%>
    <%@include file="../../jet_stub/generic/configuration.javajet"%>
    <%@include file="../../jet_stub/generic/utils/schema.javajet"%>

    org.talend.sdk.component.runtime.di.schema.TaCoKitGuessSchema tacokitGuessSchema =
                            new org.talend.sdk.component.runtime.di.schema.TaCoKitGuessSchema(out, configuration_<%=guessSchemaCid%>,
                                                                                    "<%=pluginName%>",
                                                                                    "<%=guessSchemaFamily%>",
                                                                                    "<%=guessSchemaOriginalName%>",
                                                                                    <% if(actionName == null || actionName.isEmpty()){%> null <%}else {%> "<%=actionName%>" <%}%>,
                                                                                    "<%=guessSchemaVersion%>"
                                                                                    );
<% if ("input".equalsIgnoreCase(tacokitComponentType)) {  %>
    try {
        tacokitGuessSchema.guessInputComponentSchema(schema_<%=cid%>);
    } finally {
        tacokitGuessSchema.close();
    }
<% } else { %>
    try {
        tacokitGuessSchema.guessComponentSchema(schema_<%=cid%>, "<%=outputConnectionName%>");
    } finally {
        tacokitGuessSchema.close();
    }
<% } %>