<%@ jet
    imports="
        org.talend.core.model.process.INode
        org.talend.core.model.process.ElementParameterParser
        org.talend.designer.codegen.config.CodeGeneratorArgument
        java.util.List
    "
%>

<%
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String localdir = ElementParameterParser.getValue(node, "__LOCALDIR__");
    String cid = node.getUniqueName();
    String dieOnError = ElementParameterParser.getValue(node, "__DIE_ON_ERROR__");
    String overwrite=ElementParameterParser.getValue(node, "__OVERWRITE__");
    String sftpoverwrite=ElementParameterParser.getValue(node, "__SFTPOVERWRITE__");
    String ftpsoverwrite=ElementParameterParser.getValue(node, "__FTPSOVERWRITE__");
    String remotedir = ElementParameterParser.getValue(node, "__REMOTEDIR__");
    boolean append = ("true").equals(ElementParameterParser.getValue(node, "__APPEND__"));
    String connection = ElementParameterParser.getValue(node, "__CONNECTION__");
    String useExistingConn = ElementParameterParser.getValue(node, "__USE_EXISTING_CONNECTION__");
    boolean sftp = false;
    boolean ftps = false;
    boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
    boolean useGlob = ("true").equals(ElementParameterParser.getValue(node, "__PERL5_REGEX__"));
    if(("true").equals(useExistingConn)){
        List<? extends INode> nodeList = node.getProcess().getGeneratingNodes();
        for(INode n : nodeList){
            if(n.getUniqueName().equals(connection)){
                sftp = ("true").equals(ElementParameterParser.getValue(n, "__SFTP__"));
                ftps = ("true").equals(ElementParameterParser.getValue(n, "__FTPS__"));
            }
        }
    }else{
        sftp = ("true").equals(ElementParameterParser.getValue(node, "__SFTP__"));
        ftps = ("true").equals(ElementParameterParser.getValue(node, "__FTPS__"));
    }
%>
try{
<%
    if(sftp){ // *** sftp *** //
%>
        globalMap.put("<%=cid %>_CURRENT_STATUS", "No file transfered.");
        java.util.Set<String> keySet<%=cid %> = map<%=cid %>.keySet();
        for (String key<%=cid %> : keySet<%=cid %>){
            if(key<%=cid %> == null || "".equals(key<%=cid%>)){
                <%if(isLog4jEnabled){%>
                    log.error("<%=cid%> - file name invalid!");
                <%}%>
                System.err.println("file name invalid!");
                continue;
            }
            String tempdir<%=cid %> =  localdir<%=cid %>;
            String filemask<%=cid %> = key<%=cid %>;
            String dir<%=cid %> = null;
            <%if(!useGlob) {//perl5 mode not support windows(\) path separator at the mask string%>
                String mask<%=cid %> = filemask<%=cid %>.replaceAll("\\\\", "/") ;
            <%} else {%>
                String mask<%=cid %> = filemask<%=cid%>;
            <%}%>
            int i<%=cid %> = mask<%=cid %>.lastIndexOf('/');
            if (i<%=cid %>!=-1){
                dir<%=cid %> = mask<%=cid %>.substring(0, i<%=cid %>);
                mask<%=cid %> = mask<%=cid %>.substring(i<%=cid %>+1);
            }
            if (dir<%=cid %>!=null && !"".equals(dir<%=cid %>)) tempdir<%=cid %> = tempdir<%=cid %> + "/" + dir<%=cid %>;
            <%if(!useGlob) {%>
                mask<%=cid %> = mask<%=cid %>.replaceAll("\\.", "\\\\.").replaceAll("\\*", ".*");
            <%}%>
            final String finalMask<%=cid %> = mask<%=cid %>;
            java.io.File[] listings<%=cid %> = null;
            java.io.File file<%=cid %> = new java.io.File(tempdir<%=cid %>);
            if (file<%=cid %>.isDirectory()) {
                listings<%=cid %> = file<%=cid %>.listFiles(new java.io.FileFilter() {
                    public boolean accept(java.io.File pathname) {
                        boolean result = false;
                        if (pathname != null && pathname.isFile()) {
                                result = java.util.regex.Pattern.compile(finalMask<%=cid %>).matcher(pathname.getName()).find();
                            }
                        return result;
                    }
                });
            }
            if(listings<%=cid %> != null && listings<%=cid %>.length > 0){
                for (int m<%=cid %> = 0; m<%=cid %> < listings<%=cid %>.length; m<%=cid %>++){
                    if (listings<%=cid %>[m<%=cid %>].getName().matches(mask<%=cid %>)){

                        <%if(("overwrite").equals(sftpoverwrite)){%>
                        int mode<%=cid%> = com.jcraft.jsch.ChannelSftp.OVERWRITE;
                        <%}else if(("append").equals(sftpoverwrite)){%>
                        int mode<%=cid%> = com.jcraft.jsch.ChannelSftp.APPEND;
                        <%}else if(("resume").equals(sftpoverwrite)){%>
                        int mode<%=cid%> = com.jcraft.jsch.ChannelSftp.RESUME;
                        <%}%>
                        boolean putSuccess_<%=cid%> = false;
                        
                        String remoteDir_<%=cid%> = <%=remotedir%>;
                        if(remoteDir_<%=cid%>==null) {
                        		remoteDir_<%=cid%> = "";
                        }
                        remoteDir_<%=cid%> = remoteDir_<%=cid%>.trim();
                        if(remoteDir_<%=cid%>.endsWith("/")) {
                        		remoteDir_<%=cid%> = remoteDir_<%=cid%>.substring(0, remoteDir_<%=cid%>.length()-1);
                        }
                        String destRename_<%= cid %> =  map<%=cid %>.get(key<%=cid %>);
                        final String dest_<%=cid%>;
                        if (destRename_<%= cid %> == null || destRename_<%= cid %>.isEmpty()) {
                            dest_<%=cid%> = remoteDir_<%=cid%> + "/" + listings<%=cid %>[m<%=cid %>].getName();
                        }
                        else {
                            dest_<%=cid%> = remoteDir_<%=cid%> + "/" + destRename_<%= cid %>;
                        }
                        
                        try{
                            c_<%=cid%>.put(listings<%=cid %>[m<%=cid %>].getAbsolutePath(), dest_<%=cid%>, monitor<%=cid%>, mode<%=cid%>);
                            // add info to list will return
                            msg_<%=cid%>.add("file: " + listings<%=cid %>[m<%=cid %>].getAbsolutePath() + ", size: "
                                + listings<%=cid %>[m<%=cid %>].length() + " bytes upload successfully");
                            <%if(isLog4jEnabled){%>
                                log.debug("<%=cid%> - Uploaded file '" + listings<%=cid %>[m<%=cid %>].getName() + "' successfully.");
                            <%}%>
                            globalMap.put("<%=cid %>_CURRENT_STATUS", "File transfer OK.");
                            
                            putSuccess_<%=cid%> = true;
                            
                            if(sc_<%=cid%>.statOK(c_<%=cid%>, dest_<%=cid%>)){
                                globalMap.put("<%=cid %>_CURRENT_FILE_EXISTS",true);
                            }
                        }catch(com.jcraft.jsch.SftpException e_<%=cid%>) {
globalMap.put("<%=cid%>_ERROR_MESSAGE",e_<%=cid%>.getMessage());
                            if (e_<%=cid%>.id != 4 &&   // if exception is not resume (normal) pb.
                                (e_<%=cid%>.getMessage() == null || !e_<%=cid%>.getMessage().startsWith("failed to resume"))) { 
                            <%if(isLog4jEnabled){%>
                                log.error("<%=cid%> - File transfer fail."+e_<%= cid %>.getMessage());
                            <%}%>
                            globalMap.put("<%=cid %>_CURRENT_STATUS", "File transfer fail.");
                            
                            if(!putSuccess_<%=cid%>) {
                                if(sc_<%=cid%>.statOK(c_<%=cid%>, dest_<%=cid%>)){
                                    globalMap.put("<%=cid %>_CURRENT_FILE_EXISTS",true);
                                }
                            }
                    <%
                        if(("true").equals(dieOnError)){
                    %>
                            throw(e_<%=cid%>);
                    <%
                        }else{
                    %>
                            <%if(isLog4jEnabled){%>
                                log.error("<%=cid%> - File permission denied: "+dest_<%=cid%>);
                            <%}%>
                            System.err.println("File permission denied: "+dest_<%=cid%>);
                    <%
                        }
                    %>
                        } // end if exception not resume pb
                        }catch(java.lang.Exception e_<%=cid%>){
globalMap.put("<%=cid%>_ERROR_MESSAGE",e_<%=cid%>.getMessage());
                           if(!(e_<%=cid%> instanceof com.jcraft.jsch.SftpException)) {
                                msg_<%=cid%>.add("file " + listings<%=cid %>[m<%=cid %>].getAbsolutePath() + " not found?");

                                globalMap.put("<%=cid %>_CURRENT_FILE_EXISTS",false);
                            }
                            throw e_<%=cid%>;
                        }
                        nb_file_<%=cid%>++;
                    }
                }
            }else{
                <%if(isLog4jEnabled){%>
                    log.warn("<%=cid%> - No matches found for mask '" + key<%=cid %> + "'!");
                <%}%>
                System.err.println("No matches found for mask '" + key<%=cid %> + "'!");
            }
                    }

<%
    } else {// *** ftp+ ftps *** //
        if (!ftps) {
            ftpsoverwrite = overwrite; //to avoid migration, different dropdowns with same purpose
        }
%>
        String currentStatus_<%=cid %> = "No file transfered.";
        globalMap.put("<%=cid %>_CURRENT_STATUS", currentStatus_<%=cid %>);
        java.util.Set<String> keySet<%=cid %> = map<%=cid %>.keySet();

        for (String key<%=cid %> : keySet<%=cid %>){
            if(key<%=cid %> == null || "".equals(key<%=cid%>)){
                <%if(isLog4jEnabled){%>
                    log.error("<%=cid%> - file name invalid!");
                <%}%>
                System.err.println("file name invalid!");
                continue;
            }
            String tempdir<%=cid %> =  localdir<%=cid %>;
            String filemask<%=cid %> = key<%=cid %>;
            String dir<%=cid %> = null;
            <%if(!useGlob) {//perl5 mode not support windows(\) path separator at the mask string%>
                String mask<%=cid %> = filemask<%=cid %>.replaceAll("\\\\", "/") ;
            <%} else {%>
                String mask<%=cid %> = filemask<%=cid%>;
            <%}%>
            int i<%=cid %> = mask<%=cid %>.lastIndexOf('/');
            if (i<%=cid %>!=-1){
                dir<%=cid %> = mask<%=cid %>.substring(0, i<%=cid %>);
                mask<%=cid %> = mask<%=cid %>.substring(i<%=cid %>+1);
            }
            if (dir<%=cid %>!=null && !"".equals(dir<%=cid %>)) tempdir<%=cid %> = tempdir<%=cid %> + "/" + dir<%=cid %>;
            <%if(!useGlob) {%>
                mask<%=cid %> = mask<%=cid %>.replaceAll("\\.", "\\\\.").replaceAll("\\*", ".*");
            <%}%>
            final String finalMask<%=cid %> = mask<%=cid %>;
            java.io.File[] listings<%=cid %> = null;
            java.io.File file<%=cid %> = new java.io.File(tempdir<%=cid %>);
            if (file<%=cid %>.isDirectory()) {
                listings<%=cid %> = file<%=cid %>.listFiles(new java.io.FileFilter() {
                    public boolean accept(java.io.File pathname) {
                        boolean result = false;
                        if (pathname != null && pathname.isFile()) {
                                result = java.util.regex.Pattern.compile(finalMask<%=cid %>).matcher(pathname.getName()).find();
                            }
                        return result;
                    }
                });
            }

            java.util.Set<String> remoteExistsFiles_<%=cid%> = new java.util.HashSet<>();

            final String[] ftpFileNames_<%=cid%> = ftp_<%=cid %>.listNames();
            if (ftpFileNames_<%=cid%> != null) {
                for (String ftpFileName : ftpFileNames_<%=cid%>) {
                    if("".equals(map<%=cid %>.get(key<%=cid %>))){
                        if (ftpFileName.matches(mask<%=cid %>)) {
                            remoteExistsFiles_<%=cid%>.add(ftpFileName);
                        }
                    }else{
                        if (ftpFileName.matches(map<%=cid %>.get(key<%=cid %>))) {
                            remoteExistsFiles_<%=cid%>.add(ftpFileName);
                        }
                    }
                }
            }

            if(listings<%=cid %> != null && listings<%=cid %>.length > 0){
                for (int m<%=cid %> = 0; m<%=cid %> < listings<%=cid %>.length; m<%=cid %>++){
<%
                if (!ftps) {
%>
                  try {
<%
                }
%>
                    if (listings<%=cid %>[m<%=cid %>].getName().matches(mask<%=cid %>)){
                        java.io.File file_in_localDir_<%=cid%> = listings<%=cid %>[m<%=cid %>];
                        java.io.FileInputStream file_stream_<%=cid %> = new java.io.FileInputStream(file_in_localDir_<%=cid%>);
                        
                        final String destRename_<%= cid %> =  map<%=cid %>.get(key<%=cid %>);
                        final String dest_<%=cid%>;
                        if (destRename_<%= cid %> == null || destRename_<%= cid %>.isEmpty()) {
                            dest_<%=cid%> = listings<%=cid %>[m<%=cid %>].getName();
                        }
                        else {
                            dest_<%=cid%> = destRename_<%= cid %>;
                        }
                        globalMap.put("<%=cid %>_CURRENT_FILE_EXISTS", remoteExistsFiles_<%=cid%>.contains(dest_<%=cid%>));                    
                        
<%
                        if (!ftps && append) {
%>
                            if ((remoteExistsFiles_<%=cid%>.contains(dest_<%=cid%>))){
                                ftp_<%=cid %>.appendFile(dest_<%=cid%>, file_stream_<%=cid %>);
                            } else {
                                ftp_<%=cid %>.storeFile(dest_<%=cid%>, file_stream_<%=cid %>);
                            }
                                <%if(isLog4jEnabled){%>
                                    log.debug("<%=cid%> - Uploaded file '" + dest_<%=cid%> + "' successfully.");
                                <%}%>
                                globalMap.put("<%=cid %>_CURRENT_FILE_EXISTS", remoteExistsFiles_<%=cid%>.contains(dest_<%=cid%>));
                                remoteExistsFiles_<%=cid%>.add(dest_<%=cid%>);
<%
                        } else if ("size_differ".equals(ftpsoverwrite)) {
%>
                            if ((remoteExistsFiles_<%=cid%>.contains(dest_<%=cid%>))){
                                long ftpSize = java.util.Arrays.stream(ftp_<%=cid %>.listFiles(dest_<%=cid%>))
                                        .filter(org.apache.commons.net.ftp.FTPFile::isFile)
                                        .findFirst()
                                        .get().getSize();
                                long localSize = file_in_localDir_<%=cid%>.length();
                                if (ftpSize != localSize) {
                                    ftp_<%=cid %>.deleteFile(dest_<%=cid%>);
                                }
                            } 
                            ftp_<%=cid %>.storeFile(dest_<%=cid%>, file_stream_<%=cid %>);
                            remoteExistsFiles_<%=cid%>.add(dest_<%=cid%>);
<%
                        } else if("never".equals(ftpsoverwrite)){
%>
                            if (!(remoteExistsFiles_<%=cid%>.contains(dest_<%=cid%>))){
                                ftp_<%=cid %>.storeFile(dest_<%=cid%>, file_stream_<%=cid %>);
                                <%if(isLog4jEnabled){%>
                                    log.debug("<%=cid%> - Uploaded file '" + dest_<%=cid%> + "' successfully.");
                                <%}%>
                                globalMap.put("<%=cid %>_CURRENT_FILE_EXISTS", remoteExistsFiles_<%=cid%>.contains(dest_<%=cid%>));
                                remoteExistsFiles_<%=cid%>.add(dest_<%=cid%>);
                            } 
                        <%}else if("always".equals(ftpsoverwrite)){%>
                            if ((remoteExistsFiles_<%=cid%>.contains(dest_<%=cid%>))){
                                ftp_<%=cid %>.deleteFile(dest_<%=cid%>);
                            }
                            ftp_<%=cid %>.storeFile(dest_<%=cid%>, file_stream_<%=cid %>);

                            <%if(isLog4jEnabled){%>
                                log.debug("<%=cid%> - Overwrote file '" + dest_<%=cid%> + "' successfully.");
                            <%}%>
                            globalMap.put("<%=cid %>_CURRENT_FILE_EXISTS", remoteExistsFiles_<%=cid%>.contains(dest_<%=cid%>));
                            remoteExistsFiles_<%=cid%>.add(dest_<%=cid%>);
                        <%}%>
                        file_stream_<%=cid %>.close();
<%
                        if (!ftps) {
%>
                            currentStatus_<%=cid %> = "File rename OK.";
                            msg_<%=cid%>.add("file: " + file_in_localDir_<%=cid%>.getAbsolutePath() + ", size: "
                                            + file_in_localDir_<%=cid%>.length() + " bytes upload successfully");
<%
                        }
%>
                        nb_file_<%=cid%>++;
                    }
<%
                if (!ftps) {
%>
                  }catch(java.io.IOException e_<%=cid%>){
                    currentStatus_<%=cid %> = "File rename fail.";
                    globalMap.put("<%=cid %>_CURRENT_STATUS", currentStatus_<%=cid %>);
                    throw e_<%=cid%>;
                  }
<%
                }
%>
                }
            }else{
                <%if(isLog4jEnabled){%>
                    log.warn("<%=cid%> - No matches found for mask '" + key<%=cid %> + "'!");
                <%}%>
                System.err.println("No matches found for mask '" + key<%=cid %> + "'!");
            }
                    }
	globalMap.put("<%=cid %>_CURRENT_STATUS", currentStatus_<%=cid %>);
 <%}%>
    }catch(java.lang.Exception e_<%=cid%>){
globalMap.put("<%=cid%>_ERROR_MESSAGE",e_<%=cid%>.getMessage());
<%
        if (!ftps) {
%>
            msg_<%=cid%>.add("file not found?: " + e_<%=cid%>.getMessage());
<%
        
}
        if(("true").equals(dieOnError)){
%>
            throw(e_<%=cid%>);
<%
        }else{
%>
            <%if(isLog4jEnabled){%>
                log.error("<%=cid%> - " + e_<%=cid%>.getMessage());
            <%}%>
            System.err.print(e_<%=cid%>.getMessage());
<%
        }
%>
    }